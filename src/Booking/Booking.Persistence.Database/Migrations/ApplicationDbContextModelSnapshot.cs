// <auto-generated />
using System;
using Booking.Persistence.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking.Persistence.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Booking.Domain.AvailableHotels", b =>
                {
                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BasePrice")
                        .HasColumnType("float");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("Hotel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.ToTable("AvailableHotels");
                });

            modelBuilder.Entity("Booking.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(2024, 2, 11, 14, 21, 58, 649, DateTimeKind.Local).AddTicks(1867),
                            DocumentNumber = 102078256,
                            DocumentType = 1,
                            Email = "Juan.P@hotmail.com",
                            EmergencyContact = "Maria Rodriguez",
                            EmergencyContactPhone = "5256024",
                            Gender = "M",
                            LastName = "Perez",
                            Name = "Juan",
                            Phone = "3135026"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(2024, 2, 11, 14, 21, 58, 649, DateTimeKind.Local).AddTicks(1877),
                            DocumentNumber = 17896582,
                            DocumentType = 1,
                            Email = "JuanA.G@hotmail.com",
                            EmergencyContact = "Carlos Rodriguez",
                            EmergencyContactPhone = "8956225",
                            Gender = "F",
                            LastName = "Garces",
                            Name = "Sofia",
                            Phone = "258782"
                        });
                });

            modelBuilder.Entity("Booking.Domain.IdentificationType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("IdentificationTypes");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            Type = "Cedula Ciudadania"
                        },
                        new
                        {
                            TypeId = 2,
                            Type = "Pasaporte"
                        },
                        new
                        {
                            TypeId = 3,
                            Type = "Tarjeta Identidad"
                        });
                });

            modelBuilder.Entity("Booking.Domain.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"), 1L, 1);

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            AdmissionDate = new DateTime(2024, 2, 11, 14, 21, 58, 649, DateTimeKind.Local).AddTicks(2551),
                            CustomerId = 102078256,
                            DepartureDate = new DateTime(2024, 2, 13, 14, 21, 58, 649, DateTimeKind.Local).AddTicks(2553),
                            HotelId = 1,
                            RoomId = 5
                        },
                        new
                        {
                            ReservationId = 2,
                            AdmissionDate = new DateTime(2024, 2, 11, 14, 21, 58, 649, DateTimeKind.Local).AddTicks(2560),
                            CustomerId = 17896582,
                            DepartureDate = new DateTime(2024, 2, 13, 14, 21, 58, 649, DateTimeKind.Local).AddTicks(2561),
                            HotelId = 1,
                            RoomId = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
